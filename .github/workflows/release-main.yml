on:
  push:
    branches:
      - main

name: Release Main
jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: node
          package-name: ${{ vars.NPM_PACKAGE }}
          bump-minor-pre-major: true
          bump-patch-for-minor-pre-major: true
      - name: echo steps context
        env: 
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo $STEPS_CONTEXT
      - uses: actions/checkout@v3
        # these if statements ensure that a publication only occurs when
        # a new release is created:
        if: ${{ steps.release.outputs.release_created }}
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org'
        if: ${{ steps.release.outputs.release_created }}
      - run: npm install
        if: ${{ steps.release.outputs.release_created }}
      - run: npm run build
        if: ${{ steps.release.outputs.release_created }}
      - run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{  secrets.NPM_TOKEN  }}
        if: ${{ steps.release.outputs.release_created }}
      - name: echo jsdelivr link
        run: echo "https://cdn.jsdelivr.net/npm/${{ vars.NPM_PACKAGE }}@${{ steps.release.outputs.version }}/"
        if: ${{ steps.release.outputs.release_created }}

  release-next:
    name: release next ${{ github.sha }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org'
      - run: |
          npm install
          npm run build
      - name: set and echo dev version
        run: |
          npm_command="npm version --commit-hooks false --git-tag-version false"
          version_string=`$npm_command prerelease --preid "next"`
          short_sha=`git rev-parse --short HEAD`
          next_version=`echo -n $version_string | sed "s/.$/${short_sha}/"`
          $npm_command $next_version
          echo "NEXT_VERSION=$next_version" >> $GITHUB_ENV
      - run: npm publish --access public --tag next
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      - name: echo jsdelivr link
        run: echo "https://cdn.jsdelivr.net/npm/${{ vars.NPM_PACKAGE }}@${{ env.NEXT_VERSION }}/"
